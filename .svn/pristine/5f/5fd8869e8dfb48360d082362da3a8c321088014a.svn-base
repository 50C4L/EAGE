#ifndef _AUDIOMANAGER_H
#define _AUDIOMANAGER_H

#include <SFML\Audio.hpp>
#include <map>
#include <string>
#include "../helper/helper.h"

class AudioManager
{
public:
	~AudioManager();
	static AudioManager* getInstance();

	int				loadSoundFromFile( int id, std::string filePath );
	int				loadMusicFromFile( int id, std::string filePath );
	sf::SoundBuffer*getSound( int id );
	sf::Music*		getMusic( int id );
	void			clear();

protected:
	AudioManager();

private:
	static AudioManager*		_instance;
	std::map<int,sf::SoundBuffer*>	_soundList;
	std::map<int,sf::Music*>		_musicList;

	// deallocator
	template <typename T>
	struct Deallocator
	{
		void operator()( const std::pair<int,T> &p )
		{
			delete p.second;
		}
	};
};

#endif