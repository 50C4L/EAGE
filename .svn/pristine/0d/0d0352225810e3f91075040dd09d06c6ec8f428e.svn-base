#include "PhysicsModule.h"
#include "../helper/helper.h"

PhysicsModule::PhysicsModule()
{
	_currentFPS = 60.0f;
}

PhysicsModule::~PhysicsModule()
{
}

bool PhysicsModule::initialize()
{
	return true;
}

void PhysicsModule::shutdown()
{
}

void PhysicsModule::setGravity( sf::Vector2f value )
{
	_gravity = value;
	printf( "Physics Module: Gravity is set to (%.2f,%.2f).\n", _gravity.x, _gravity.y );
}

void PhysicsModule::setFPS( float value )
{
	_currentFPS = value;
}

void PhysicsModule::addObject( VisibleObject* obj )
{
	if( obj )
		_objectList.push_back( obj );
	else
		printf( "<ERROR> Physics Module: Invalid game object.\n" );
}

void PhysicsModule::clear()
{
	_objectList.clear();
}

void PhysicsModule::update()
{
	// calculation for object's velocity
	sf::Vector2f GPF = _gravity/_currentFPS;
	if( !_objectList.empty() )
	{
		std::list<VisibleObject*>::iterator i = _objectList.begin();
		while( i != _objectList.end() )
		{
			if( (*i)->_physxBody.IsDynamic )
			{
				(*i)->_physxBody.accumulation += GPF + (*i)->_physxBody.acceleration/_currentFPS;
				sf::Vector2f temp;
				temp = (*i)->_physxBody.uniform * (*i)->_physxBody.currentSpeed;
				temp = temp/_currentFPS + (*i)->_physxBody.accumulation;
				(*i)->setTranslate( temp );
			}
			++i;
		}
	}
}
